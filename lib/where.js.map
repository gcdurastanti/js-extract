{"version":3,"sources":["../src/where.js"],"names":["where","data","match","validator","result","value","_","forIn","key","console","log"],"mappings":";;;;;;;AAAA;;;;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA,MAAMA,KAAK,GAAGC,IAAI,IAAI,CAACC,KAAD,EAAQC,SAAR,KAAsB;AAC1C,MAAIC,MAAM,GAAG,EAAb;AACA,QAAMC,KAAK,GAAGJ,IAAI,CAAC,SAAD,CAAlB;;AACAK,kBAAEC,KAAF,CAAQN,IAAR,EAAc,CAACI,KAAD,EAAQG,GAAR,KAAgB;AAC5BC,IAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ,EAAmBG,GAAnB;AACD,GAFD;;AAIA,SAAOJ,MAAP;AACD,CARD;;eAUeJ,K","sourcesContent":["import _ from 'lodash';\n\n// match = *.*.value\n// const where = (data, selectors) => (match, validator) => {\n//   let result = {};\n\n//   selectors.forEach(selector => {\n//     const parts = selector.split('.');\n//     const matchParts = match.split('.');\n\n//     const isMatch = (parts, matchParts) => {\n//       for (let i = 0; i < parts.length; i++) {\n//         if (matchParts[i] !== '*' || matchParts[i] !== parts[i]) {\n//           return false;\n//         }\n//       }\n//       return true;\n//     };\n\n//     if (parts.length === matchParts.length && isMatch(parts, matchParts)) {\n//       const val = _.pick(data, selector);\n//       if (validator(val)) {\n//         _.set(result, selector, val);\n//       }\n//     }\n//   });\n\n//   return { result };\n// };\n\nconst where = data => (match, validator) => {\n  let result = {};\n  const value = data['one.str'];\n  _.forIn(data, (value, key) => {\n    console.log(value, key);\n  });\n\n  return result;\n};\n\nexport default where;\n"],"file":"where.js"}